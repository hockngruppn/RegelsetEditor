--------------------------------------------------------
--  DDL for Table RE_REGEL_DEF
--------------------------------------------------------

  CREATE TABLE "RE_REGEL_DEF"
   (	"ID" NUMBER(38,0),
	"KATEGORIE" VARCHAR2(100 CHAR),
	"NAME" VARCHAR2(100 CHAR),
	"REGEL_CLASS_NAME" VARCHAR2(500 CHAR),
	"BESCHREIBUNG" VARCHAR2(500 CHAR),
	"VERSION_BEZEICHNUNG" VARCHAR2(10 CHAR),
	"ERSTELLT_AM" DATE,
	"GEAENDERT_AM" DATE,
	"ERSTELLT_VON" VARCHAR2(20 CHAR),
	"GEAENDERT_VON" VARCHAR2(20 CHAR),
	"VERSION" NUMBER(10,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  ;
REM INSERTING into RE_REGEL_DEF
SET DEFINE OFF;
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108531','DAKA_FORMAL_LOADDATEN','E11PruefungBdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungBdat','Prüft das Behandlungsdatum','1.0',to_date('27.10.2016 10:35:48','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 10:35:48','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('91548',null,'PropertyIsNotValueInListRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.PropertyIsNotValueInListRegel','Es wird geprueft ob ein bestimmtes Property [regelParam:propertyPath] keine der Values aus der Liste [regelParam:excludedValues] ist.','1.0',to_date('29.09.2015 10:46:18','DD.MM.YYYY HH24:MI:SS'),to_date('29.09.2015 10:46:18','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000011264','ANTRAG','Anspruch LB','at.sozvers.bva.boa.leib.service.rules.antrag.LbAnspruchRegel','Prüft den Anspruch des LB.','1.0',to_date('09.01.2018 15:44:33','DD.MM.YYYY HH24:MI:SS'),to_date('09.01.2018 15:44:33','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('4',null,'AlwaysSucceedRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.AlwaysSucceedRegel','Eine Regel, die immer erfolgreich durchläuft.','1.0',to_date('16.02.2015 15:33:35','DD.MM.YYYY HH24:MI:SS'),to_date('16.07.2015 10:21:04','DD.MM.YYYY HH24:MI:SS'),'fischerc','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5',null,'AlwaysFailRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.AlwaysFailRegel','Eine Regel, die immer eine Violation liefert.','1.0',to_date('16.02.2015 15:33:35','DD.MM.YYYY HH24:MI:SS'),to_date('16.07.2015 10:21:13','DD.MM.YYYY HH24:MI:SS'),'fischerc','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000011265','ANTRAG','Berechtigung LE nach FG','at.sozvers.bva.boa.leib.service.rules.antrag.LeDarfLeistungErbringenRegel','Prüft, ob der Leistungserbringer die Leistung erbringen darf.','1.0',to_date('09.01.2018 15:45:09','DD.MM.YYYY HH24:MI:SS'),to_date('09.01.2018 15:45:09','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000011266','ANTRAG','Verrechnungsberechtigung LE','at.sozvers.bva.boa.leib.service.rules.antrag.LeVerrechnungsberechtigtRegel','Prüft den Leistungserbringer nach Verordnungsreferenz in NOVA.','1.0',to_date('09.01.2018 15:45:34','DD.MM.YYYY HH24:MI:SS'),to_date('09.01.2018 15:45:34','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000011267','ANTRAG','Berechtigung LV nach FG','at.sozvers.bva.boa.leib.service.rules.antrag.LvDarfLeistungVerordnenRegel','Prüft, ob der Leistungsverordner die Leistung verordnen darf.','1.0',to_date('09.01.2018 15:45:57','DD.MM.YYYY HH24:MI:SS'),to_date('09.01.2018 15:45:57','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100269','DAKA_FORMAL_LOADDATEN','IDPruefungGebdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungGebdat','Pruefung des Geburtsdatums des Versicherten','1.0',to_date('23.11.2015 14:37:31','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 13:42:25','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100273','DAKA_FORMAL_LOADDATEN','IDPruefungAvsnr','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungAvsnr','Pruefung der Angehoerigen-SVNR','1.0',to_date('23.11.2015 14:39:09','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 13:51:02','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100275','DAKA_FORMAL_LOADDATEN','IDPruefungAgebdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungAgebdat','Pruefung des Angehoerigen-Geburtsdatums ','1.0',to_date('23.11.2015 14:39:55','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 14:02:08','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('107845','DAKA_FORMAL_LOADDATEN','IDPruefungSart','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungSart','Pruefung der Satzart','1.0',to_date('07.10.2016 08:25:52','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 08:25:52','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100279','DAKA_FORMAL_LOADDATEN','IDPruefungAgeschl','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungAgeschl','Pruefung des Geschlechtskennzeichens des Angehoerigen','1.0',to_date('23.11.2015 14:42:19','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 13:58:33','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','3');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('101462','DAKA_FORMAL_LOADDATEN','E4PruefungDiagnose','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungDiagnose','Pruefung der Diagnosen 1-3','1.0',to_date('26.11.2015 10:17:18','DD.MM.YYYY HH24:MI:SS'),to_date('14.10.2016 08:35:41','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102265','DAKA_FORMAL_AMBUK17','ValidDiagnosecodeDakaRegel','at.sozvers.bva.daka.batch.service.rules.ambuk17.ValidDiagnosecodeDakaRegel','Es wird geprueft ob ein bestimmter Diagnosecode (k17Hdiag) ein valid ist. Bei Fehlschlag der Pruefung wird der [regelParam:errorCode] als Violation zuruckgegeben.','1.0',to_date('10.12.2015 10:32:00','DD.MM.YYYY HH24:MI:SS'),to_date('10.12.2015 10:32:00','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102301','DAKA_FORMAL_AMBUK17','ValidIdZunaDakaRegel','at.sozvers.bva.daka.batch.service.rules.ambuk17.ValidIdZunaDakaRegel','Es wird geprueft ob Die VSNR-Property "idZuna" der Load-Daten valide ist. Das bedeutet, dass entweder idZuna nicht null sein darf, oder aber idAsvnr nicht null sein darf. Bei Fehlschlag der Pruefung wird der [regelParam:errorCode] als Violation zuruckgegeben.','1.0',to_date('10.12.2015 10:46:25','DD.MM.YYYY HH24:MI:SS'),to_date('10.12.2015 10:46:25','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108385','DAKA_FORMAL_LOADDATEN','E8PruefungLdfbet','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungLdfbet','Prüft den Wert des LDF-Betrages netto','1.0',to_date('24.10.2016 17:00:43','DD.MM.YYYY HH24:MI:SS'),to_date('24.10.2016 17:00:43','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102998','DAKA_FORMAL_LOADDATEN','E8PruefungBeih','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungBeih','E8_BEIH (WENN (E8_KOANF in (''K'',''R'')) UND NICHT (not null, numerisch nach left trim, nicht gleich 0) UND NICHT (ID_KANR in Liste UST-Befreite KH UND gleich ''00000'')','1.0',to_date('18.12.2015 09:14:07','DD.MM.YYYY HH24:MI:SS'),to_date('24.10.2016 13:54:31','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108387','DAKA_FORMAL_LOADDATEN','E8PruefungLdffak','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungLdffak','Prüft den Inhalt des LDF-Punktewerts','1.0',to_date('24.10.2016 17:04:25','DD.MM.YYYY HH24:MI:SS'),to_date('24.10.2016 17:04:25','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('30847',null,'PropertyIsNotEmptyRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.PropertyIsNotEmptyRegel','Es wird geprüft ob ein bestimmtes Property [regelParam:propertyPath] NICHT leer ist.','1.0',to_date('15.05.2015 14:24:00','DD.MM.YYYY HH24:MI:SS'),to_date('15.05.2015 14:24:00','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('93095','REVISIONSPFLICHT','Revision wenn Leistung abgelehnt','at.sozvers.bva.boa.leib.service.rules.revisionspflicht.RevisionLeistungIstAbgelehntRegel','GR_0382: Der Antrag hat Revisionspflicht, wenn die Leistungssbeurteilung einer Leistung "Abgelehnt" ist.','1.0',to_date('07.10.2015 11:20:47','DD.MM.YYYY HH24:MI:SS'),to_date('08.10.2015 14:38:02','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100510','DAKA_FORMAL_LOADDATEN','IDPruefungEntl','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungEntl','Pruefung des Entlassungsdatums.','1.0',to_date('25.11.2015 08:03:59','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 08:59:03','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100512','DAKA_FORMAL_LOADDATEN','E6PruefungEnts','at.sozvers.bva.daka.batch.service.rules.loaddaten.e6.E6PruefungEnts','Pruefung des Entlassungsschluessels.','1.0',to_date('25.11.2015 08:06:13','DD.MM.YYYY HH24:MI:SS'),to_date('13.10.2016 15:55:16','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100516','DAKA_FORMAL_LOADDATEN','E6PruefungDiagkz','at.sozvers.bva.daka.batch.service.rules.loaddaten.e6.E6PruefungDiagkz','Pruefung der Diagnosequalifikation.','1.0',to_date('25.11.2015 08:07:18','DD.MM.YYYY HH24:MI:SS'),to_date('13.10.2016 16:11:29','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','3');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100518','DAKA_FORMAL_LOADDATEN','E6PruefungDiagnose','at.sozvers.bva.daka.batch.service.rules.loaddaten.e6.E6PruefungDiagnose','Pruefung der Hauptdiagnose.','1.0',to_date('25.11.2015 08:07:53','DD.MM.YYYY HH24:MI:SS'),to_date('14.10.2016 08:37:03','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','3');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100520','DAKA_FORMAL','PropertyIsEqualToGermanYesOrNoDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsEqualToGermanYesOrNoDakaRegel','Pruefung des Fremdverschulden-Kennzeichens.','1.0',to_date('25.11.2015 08:15:40','DD.MM.YYYY HH24:MI:SS'),to_date('25.11.2015 08:15:40','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100534','DAKA_FORMAL_LOADDATEN','E6PruefungVkla','at.sozvers.bva.daka.batch.service.rules.loaddaten.e6.E6PruefungVkla','Pruefung des Kennzeichens Verlegung Klasse.','1.0',to_date('25.11.2015 08:24:56','DD.MM.YYYY HH24:MI:SS'),to_date('24.10.2016 11:25:33','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('95284','REVISIONSPFLICHT','Revisionspflicht bei bestehender Vorrevision','at.sozvers.bva.boa.leib.service.rules.revisionspflicht.RevisionBeiVorrevisionRegel','GR_1552: Revisionspflicht bei bestehender Vorrevision: Existiert mindestens ein Objekt Antrag.Revision zum Antrag, war der Antrag bereits bei einem Revidenten und es besteht eine Vorrevision. Der Antrag ist somit zwingend zu revidieren.','1.0',to_date('25.06.2018 00:00:00','DD.MM.YYYY HH24:MI:SS'),to_date('25.06.2018 00:00:00','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('101198','DAKA_FORMAL_LOADDATEN','E6PruefungAvdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e6.E6PruefungAvdat','Pruefung des Aufnahme-/Verlegungsdatums.','1.0',to_date('26.11.2015 09:14:03','DD.MM.YYYY HH24:MI:SS'),to_date('24.10.2016 11:23:27','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('103048','DAKA_FORMAL','PropertyIsNullOrValidDateDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsNullOrValidDateDakaRegel','Es wird geprueft ob ein bestimmtes Property [regelParam:propertyPath] nicht null, und ein valides Datum ist. Wenn die Pruefung fehl schlaegt, dann wird - je nach Validierungsfehler der [regelParam:errorCodeForNull] oder der [regelParam:errorCodeForNoValidDate] als Violationzuruckgegeben.','1.0',to_date('18.12.2015 10:13:34','DD.MM.YYYY HH24:MI:SS'),to_date('18.12.2015 10:13:34','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000014167','DAKA_FORMAL_LOADDATEN','E11PruefungKoanf','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungKoanf','Es wird geprueft ob das Property E8_KOANF (bedeutet Kostenmeldungs-Anforderung) nicht {@code null} und ein valider "Wert fuer eine Kostenmeldungsanforderung" ist. Der moeglichen Werte zu den Anforderungen sind in einem Java-Enum ( {@link KostenmeldungsAnforderungsWerteliste} definiert, und gegen dieses Enum wird geprueft.','1.0',to_date('04.09.2018 11:38:51','DD.MM.YYYY HH24:MI:SS'),to_date('04.09.2018 11:38:51','DD.MM.YYYY HH24:MI:SS'),'boa09','boa09','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('104195','DAKA','PropertyIsNotNullAndGreaterThanDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsNotNullAndGreaterThanDakaRegel','Es wird geprueft ob ein bestimmtes Property [regelParam:propertyPath] groesser als eine bestimmte Value [regelParam:greaterThan] ist. Ist das Property null, wird immer eine Violation erstellt, da null nicht groesser als der bestimmte Wert sein kann.','1.0',to_date('13.01.2016 11:33:46','DD.MM.YYYY HH24:MI:SS'),to_date('13.01.2016 11:33:46','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('104305','DAKA_FORMAL','PropertyIsNotNullAndValueInListDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsNotNullAndValueInListDakaRegel','Pruefung, ob ein Wert nicht null ist und einem der angegebenen Werten entspricht.','1.0',to_date('21.01.2016 15:29:59','DD.MM.YYYY HH24:MI:SS'),to_date('21.01.2016 15:31:47','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('104350','DAKA_FORMAL','PropertyIsNullOrValueInListDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsNullOrValueInListDakaRegel','Es wird geprueft ob ein bestimmtes Property [regelParam:propertyPath] null ist oder eine der Values aus der Liste [regelParam:expectedValues] hat.','1.0',to_date('21.01.2016 16:19:03','DD.MM.YYYY HH24:MI:SS'),to_date('21.01.2016 16:24:09','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('104374','DAKA_FORMAL_AMBUK17','ValidGeburtsdatumDakaRegel','at.sozvers.bva.daka.batch.service.rules.ambuk17.ValidGeburtsdatumDakaRegel','Es wird geprueft, ob ein Datumsstring gueltig, null oder "00000000" ist.','1.0',to_date('21.01.2016 17:41:00','DD.MM.YYYY HH24:MI:SS'),to_date('21.01.2016 17:41:00','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('30845',null,'PropertyIsEmptyRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.PropertyIsEmptyRegel','Es wird geprüft ob ein bestimmtes Property [regelParam:propertyPath] leer ist.','1.0',to_date('15.05.2015 14:22:42','DD.MM.YYYY HH24:MI:SS'),to_date('15.05.2015 14:22:42','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('92768','REVISIONSPFLICHT','Revision wenn Leistungsbeurteilung HST Vorlage','at.sozvers.bva.boa.leib.service.rules.revisionspflicht.RevisionHSTVorlageRegel','GR_0381
Revisionspflicht bei Leistungsbeurteilung "HST-Vorlange". Wenn ein Sachbearbeiter bei einem Antrag den Leistungsbeurteilungsstatus "HST-Vorlage" auswählt, dann muss der Antrag zwingend in die Revison.','1.0',to_date('06.10.2015 13:56:17','DD.MM.YYYY HH24:MI:SS'),to_date('08.10.2015 14:38:50','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('95887',null,'PropertyIsHuber','at.sozvers.bva.boa.leib.service.rules.PropertyIsHuberRegel','Es wird geprueft ob ein bestimmtes Property [regelParam:propertyPath] dem String "Huber" entspricht.','1.0',to_date('29.10.2015 11:10:30','DD.MM.YYYY HH24:MI:SS'),to_date('29.10.2015 11:10:30','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98367','DAKA_FORMAL','PropertyIsNotNullAndValidDateDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsNotNullAndValidDateDakaRegel','Pruefung, ob das Datum nicht leer und in der richtigen Form ist: JJJJMMDD','1.0',to_date('10.11.2015 09:10:42','DD.MM.YYYY HH24:MI:SS'),to_date('19.11.2015 14:29:41','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','4');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98377','DAKA_FORMAL','PropertyIsNotNullAndNumericDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsNotNullAndNumericDakaRegel','Pruefung eines Feldinhalts auf numerischen Inhalt','1.0',to_date('10.11.2015 09:33:18','DD.MM.YYYY HH24:MI:SS'),to_date('19.11.2015 14:27:57','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98383','DAKA_FORMAL','PropertyIsNullOrNumericDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsNullOrNumericDakaRegel','Pruefung eines Feldinhalts auf numerischen Inhalt oder null.','1.0',to_date('10.11.2015 09:39:32','DD.MM.YYYY HH24:MI:SS'),to_date('19.11.2015 14:28:54','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102289','DAKA_FORMAL_AMBUK17','ValidIdAvsnrDakaRegel','at.sozvers.bva.daka.batch.service.rules.ambuk17.ValidIdAvsnrDakaRegel','Es wird geprueft ob Die VSNR-Property "idAvsnr" der Load-Daten angegeben (also nicht null) und eine valide Versicherungsnummer ist. Zu beachten gilt, dass VSNR und SVNR dasselbe sind. Bei Fehlschlag der Pruefung wird der [regelParam:errorCode] als Violation zuruckgegeben.','1.0',to_date('10.12.2015 10:38:38','DD.MM.YYYY HH24:MI:SS'),to_date('10.12.2015 10:44:12','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('107884','DAKA_FORMAL_LOADDATEN','IDPruefungVgr','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungVgr','Pruefung der Versichertengruppe/Kategorie','1.0',to_date('07.10.2016 13:54:41','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 13:54:41','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98396','DAKA_FORMAL_LOADDATEN','E2PruefungVorigeSatzartRegel','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungVorigeSatzartRegel','Pruefung vorige Satzart. Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben.','1.0',to_date('10.11.2015 10:41:27','DD.MM.YYYY HH24:MI:SS'),to_date('19.11.2015 14:37:51','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100085','DAKA_FORMAL_LOADDATEN','IDPruefungGeschl','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungGeschl','Pruefung des Geschlechtskennzeichens des Versicherten','1.0',to_date('23.11.2015 06:49:46','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 13:38:47','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','3');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100086','DAKA_FORMAL_LOADDATEN','IDPruefungAufn','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungAufn','Pruefung des Aufnahmedatums ','1.0',to_date('23.11.2015 06:50:06','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 08:53:31','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100087','DAKA_FORMAL_LOADDATEN','IDPruefungAufzl','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungAufzl','Pruefung der Aufnahmezahl ','1.0',to_date('23.11.2015 06:50:28','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 08:37:22','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100088','DAKA_FORMAL_LOADDATEN','IDPruefungBetreu','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungBetreu','Pruefung des Betreuungskennzeichens','1.0',to_date('23.11.2015 06:50:46','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 14:18:23','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100089','DAKA_FORMAL_LOADDATEN','IDPruefungFanu','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungFanu','Pruefung der Fallnummer','1.0',to_date('23.11.2015 06:51:01','DD.MM.YYYY HH24:MI:SS'),to_date('24.10.2016 07:35:37','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100090','DAKA_FORMAL_LOADDATEN','IDPruefungKomm','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungKomm','Pruefung des Kommentarsatz-Kennzeichens','1.0',to_date('23.11.2015 06:51:18','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 10:49:24','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100091','DAKA_FORMAL_LOADDATEN','IDPruefungKost','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungKost','Pruefung des Kostentraegers','1.0',to_date('23.11.2015 06:51:33','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 08:44:54','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100092','DAKA_FORMAL_LOADDATEN','IDPruefungKanr','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungKanr','Pruefung des Krankenanstaltennummer (=Vertragspartnernummer)','1.0',to_date('23.11.2015 06:51:51','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 08:29:32','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100093','DAKA_FORMAL_LOADDATEN','IDPruefungVsnr','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungVsnr','Pruefung der Versicherten-SVNR','1.0',to_date('23.11.2015 06:52:10','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 13:25:12','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100094','DAKA_FORMAL_LOADDATEN','IDPruefungVstr','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungVstr','Pruefung des Versicherungstraegers','1.0',to_date('23.11.2015 06:52:25','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 08:46:45','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100095','DAKA_FORMAL_LOADDATEN','IDPruefungVona','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungVona','Pruefung des Vornamens des Versicherten','1.0',to_date('23.11.2015 06:52:50','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 13:35:27','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100096','DAKA_FORMAL_LOADDATEN','IDPruefungZuna','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungZuna','Pruefung des Zunamens des Versicherten','1.0',to_date('23.11.2015 06:53:07','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2016 13:28:58','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108085','DAKA_FORMAL_LOADDATEN','E2PruefungBest','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungBest','Prüfung der Bestandsbezeichnung','1.0',to_date('11.10.2016 09:33:45','DD.MM.YYYY HH24:MI:SS'),to_date('11.10.2016 09:33:45','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('31037',null,'PropertyIsValueRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.PropertyIsValueRegel','Es wird geprüft ob ein bestimmtes Property [regelParam:propertyPath] eine bestimmte Value [regelParam:expectedValue] hat.','1.0',to_date('18.05.2015 17:00:02','DD.MM.YYYY HH24:MI:SS'),to_date('16.07.2015 10:19:41','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('32366',null,'PropertyIsGreaterThanRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.PropertyIsGreaterThanRegel','Es wird geprüft ob ein bestimmtes Property [regelParam:propertyPath] größer als eine bestimmte Value [regelParam:greaterThan] ist.','1.0',to_date('28.05.2015 10:36:01','DD.MM.YYYY HH24:MI:SS'),to_date('16.07.2015 10:20:37','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('32369',null,'PropertyIsLowerThanRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.PropertyIsLowerThanRegel','Es wird geprüft ob ein bestimmtes Property [regelParam:propertyPath] kleiner als eine bestimmte Value [regelParam:lowerThan] ist.','1.0',to_date('28.05.2015 10:40:35','DD.MM.YYYY HH24:MI:SS'),to_date('16.07.2015 10:20:15','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('92032','REVISIONSPFLICHT','Revisionswahrscheinlichkeit aus LDAP','at.sozvers.bva.boa.leib.service.rules.revisionspflicht.RevisionswahrscheinlichkeitAusLDAPRegel','A_0247: Revisions-Wahrscheinlichkeit aus dem LDAP fuer den aktuellen Bearbeiter.','1.0',to_date('30.09.2015 18:21:53','DD.MM.YYYY HH24:MI:SS'),to_date('01.10.2015 13:41:42','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('92033','REVISIONSPFLICHT','Stichproben Revision','at.sozvers.bva.boa.leib.service.rules.revisionspflicht.StichprobeRegel','A_0293: BOA muss die Zuweisung von bestimmten Anträgen zur Revision nach dem Zufallsprinzip unterstützen. Die Stichprobe ist unabhängig von der Revisionsquote des jeweiligen Bearbeiters. Stichprobe konfigurierbar mit [regelParam:stichprobe] zB: 0,01 (1% Wahrscheinlichkeit)','1.0',to_date('30.09.2015 18:22:25','DD.MM.YYYY HH24:MI:SS'),to_date('07.10.2015 10:09:37','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108545','DAKA_FORMAL_LOADDATEN','E11PruefungDiagnose','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungDiagnose','Prüft die Hauptdiagnose','1.0',to_date('27.10.2016 14:37:29','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 14:37:29','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98347','DAKA_FORMAL','PropertyIsNotEmptyDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsNotEmptyDakaRegel','Es wird geprueft ob ein bestimmtes Property [regelParam:propertyPath] NICHT leer ist. Wenn leer, dann wird der [regelParam:fehlercode] als Violation zuruckgegeben.','1.0',to_date('09.11.2015 13:45:44','DD.MM.YYYY HH24:MI:SS'),to_date('09.11.2015 13:51:27','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98356','DAKA_FORMAL_LOADDATEN','E2PruefungObus','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungObus','Pruefung des Ordnungsbegriffs der übermittelnden Stelle','1.0',to_date('09.11.2015 13:51:09','DD.MM.YYYY HH24:MI:SS'),to_date('11.10.2016 09:38:33','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','3');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108548','DAKA_FORMAL_LOADDATEN','E11PruefungHdiagart','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungHdiagart','Prüft die Hauptdiagnose-Art','1.0',to_date('27.10.2016 14:41:57','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 14:41:57','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98578','DAKA_FORMAL_LOADDATEN','E4PruefungEntbdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungEntbdat','Pruefung des Entbindungsdatums. Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben','1.0',to_date('12.11.2015 14:45:19','DD.MM.YYYY HH24:MI:SS'),to_date('13.10.2016 11:08:40','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98582','DAKA_FORMAL_LOADDATEN','E4PruefungErdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungErdat','Pruefung des Ereignisdatums. Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben','1.0',to_date('12.11.2015 14:47:43','DD.MM.YYYY HH24:MI:SS'),to_date('13.10.2016 07:45:26','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98592','DAKA_FORMAL_LOADDATEN','E4PruefungVtag','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungVtag','Pruefung der Verlaengerungstage. Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben.','1.0',to_date('12.11.2015 14:49:15','DD.MM.YYYY HH24:MI:SS'),to_date('13.10.2016 11:13:04','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98596','DAKA_FORMAL_LOADDATEN','E4PruefungStaat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungStaat','Pruefung des Staatsbuergerschaftsschluessels.','1.0',to_date('12.11.2015 14:53:10','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 16:54:22','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','3');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98597','DAKA_FORMAL_LOADDATEN','E4PruefungPalkz','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungPalkz','Pruefung des Patienten-Laenderkennzeichens.','1.0',to_date('12.11.2015 14:57:17','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 17:01:49','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','4');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108550','DAKA_FORMAL_LOADDATEN','E11PruefungHdiaglok','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungHdiaglok','Prüft die Hauptdiagnose-Lokalisation','1.0',to_date('27.10.2016 14:45:51','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 14:48:38','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('100772','DAKA_FORMAL_LOADDATEN','E6PruefungZusatzdiagnose','at.sozvers.bva.daka.batch.service.rules.loaddaten.e6.E6PruefungZusatzdiagnose','Pruefung der Zusatzdiagnose(n).','1.0',to_date('25.11.2015 11:49:31','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 16:22:15','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102133',null,'AreValuesInListRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.AreValuesInListRegel','Es wird geprueft ob jede Property in einer Liste von Properties [regelParam:propertyPathList] eine der Values aus der Werteliste [regelParam:expectedValues] hat. Zu jedem Property-Path kann optional ein Fehlercoce angegeben werden (getrennt durch einen Doppelpunkt), der in der Violation zu dieser Property verwendet wird (Bsp: person.isBva:101).','1.0',to_date('09.12.2015 13:31:17','DD.MM.YYYY HH24:MI:SS'),to_date('09.12.2015 14:08:19','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('31254',null,'PropertyIsValueInListRegel','at.sozvers.bva.boa.core.rulesengine.rules.impl.PropertyIsValueInListRegel','Es wird geprüft ob ein bestimmtes Property [regelParam:propertyPath] eine der Values aus der Liste [regelParam:expectedValues] hat.','1.0',to_date('19.05.2015 15:53:28','DD.MM.YYYY HH24:MI:SS'),to_date('16.07.2015 10:19:04','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102631','DAKA_FORMAL_LOADDATEN','E8PruefungKoanf','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungKoanf','Es wird geprueft ob das Property E8_KOANF (bedeutet Kostenmeldungs-Anforderung) nicht {@code null} und ein valider "Wert fuer eine Kostenmeldungsanforderung" ist. Der moeglichen Werte zu den Anforderungen sind in einem Java-Enum ( {@link KostenmeldungsAnforderungsWerteliste} definiert, und gegen dieses Enum wird geprueft.','1.0',to_date('15.12.2015 11:37:10','DD.MM.YYYY HH24:MI:SS'),to_date('24.10.2016 13:39:48','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108127','DAKA_FORMAL_LOADDATEN','E4PruefungEreig','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungEreig','Pruefung der Ereignisart','1.0',to_date('12.10.2016 15:50:30','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 15:50:30','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98467','DAKA_FORMAL','PropertyIsValidCodeFromEnumDakaRegel','at.sozvers.bva.daka.batch.service.rules.common.PropertyIsValidCodeFromEnumDakaRegel','Pruefung des Codes der uebergebenen Enum.
Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben.','1.0',to_date('12.11.2015 07:06:06','DD.MM.YYYY HH24:MI:SS'),to_date('25.11.2015 10:31:02','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','3');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98479','DAKA_FORMAL_LOADDATEN','E4PruefungKlas','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungKlas','Pruefung des Kennzeichens fuer die Klasse. Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben.','1.0',to_date('12.11.2015 07:12:57','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 16:42:52','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98483','DAKA_FORMAL_LOADDATEN','E4PruefungPar','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungPar','Pruefung der Parere. Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben.','1.0',to_date('12.11.2015 07:15:21','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 16:44:30','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108089','DAKA_FORMAL_LOADDATEN','E2PruefungDvst','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungDvst','Prüfung des datenübernehmenden Versicherungsträgers','1.0',to_date('11.10.2016 09:47:43','DD.MM.YYYY HH24:MI:SS'),to_date('11.10.2016 09:47:43','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98491','DAKA_FORMAL_LOADDATEN','E4PruefungDiagnoseVorhanden','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungDiagnoseVorhanden','Prueft, ob bei stationaeren Aufenthalten eine Diagnose vorhanden ist. Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben','1.0',to_date('12.11.2015 07:19:26','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 17:31:17','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('98499','DAKA_FORMAL_LOADDATEN','E4PruefungUsvpnr','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungUsvpnr','Pruefung der Vertragspartnernummer der ueberweisenden Stelle. Im Fehlerfall wird der [regelParam:fehlercode] als Violation zuruckgegeben.','1.0',to_date('12.11.2015 07:22:39','DD.MM.YYYY HH24:MI:SS'),to_date('13.10.2016 11:11:32','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108131','DAKA_FORMAL_LOADDATEN','E4PruefungKankz','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungKankz','Prüfung des Anstaltsart-Kennzeichens','1.0',to_date('12.10.2016 16:26:12','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 16:26:12','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102299','DAKA_FORMAL_AMBUK17','ValidIdVsnrDakaRegel','at.sozvers.bva.daka.batch.service.rules.ambuk17.ValidIdVsnrDakaRegel','Es wird geprueft ob Die VSNR-Property "idVsnr" der Load-Daten eine valide Versicherungsnummer ist. Zu beachten gilt, dass VSNR und SVNR dasselbe sind. Bei Fehlschlag der Pruefung wird der [regelParam:errorCode] als Violation zuruckgegeben.','1.0',to_date('10.12.2015 10:45:30','DD.MM.YYYY HH24:MI:SS'),to_date('10.12.2015 10:45:30','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102257','DAKA_FORMAL_AMBUK17','PropertyIsNotNullAndHasNoLeadingSpaceDakaRegel','at.sozvers.bva.daka.batch.service.rules.ambuk17.PropertyIsNotNullAndHasNoLeadingSpaceDakaRegel','Es wird geprüft ob ein bestimmtes Property [regelParam:propertyPath] NICHT leer ist und KEINE führenden Spaces hat. Falls einer der Fehlerfälle auftritt wird ein FehlerCode als Violation zurückgeliefert.','1.0',to_date('10.12.2015 10:17:17','DD.MM.YYYY HH24:MI:SS'),to_date('16.03.2016 16:26:37','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','11');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('101485','DAKA_FORMAL_LOADDATEN','E10PruefungDatenVerarbeitenRegel','at.sozvers.bva.daka.batch.service.rules.loaddaten.e10.E10PruefungDatenVerarbeitenRegel','Pruefung ob E10 verarbeitet wird.','1.0',to_date('26.11.2015 11:35:06','DD.MM.YYYY HH24:MI:SS'),to_date('26.11.2015 11:35:06','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102297','DAKA_FORMAL_AMBUK17','ValidIdAzunaDakaRegel','at.sozvers.bva.daka.batch.service.rules.ambuk17.ValidIdAzunaDakaRegel','Es wird geprueft ob Die VSNR-Property "idZuna" der Load-Daten valide ist. Das bedeutet, dass entweder idZuna nicht null sein darf, oder aber idAsvnr nicht null sein darf. Bei Fehlschlag der Pruefung wird der [regelParam:errorCode] als Violation zuruckgegeben.','1.0',to_date('10.12.2015 10:43:16','DD.MM.YYYY HH24:MI:SS'),to_date('10.12.2015 10:43:16','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('102643','DAKA_FORMAL','NullOrNumericAfterWhitespaceLeftTrimDakaRegelTest','NullOrNumericAfterWhitespaceLeftTrimDakaRegelTest','Es wird geprueft ob ein bestimmtes Property [regelParam:propertyPath] ein nicht {@code null} ist UND nach dem Entfernen von womoeglich vorhandenen Leerzeichen am String-Anfang (also links), eine gueltig Zahl darstellt UND ungleich 0 ist. Bei Fehlschlag der Pruefung wird der [regelParam:fehlercode] als Violation zuruckgegeben.','1.0',to_date('15.12.2015 11:53:56','DD.MM.YYYY HH24:MI:SS'),to_date('15.12.2015 11:53:56','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('107929','DAKA_FORMAL_LOADDATEN','IDPruefungFeco','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungFeco','Pruefung des Fehlercodes (darf nur bei Satzart=Fxx vohanden sein)','1.0',to_date('10.10.2016 14:09:41','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 14:09:41','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('107939','DAKA_FORMAL_LOADDATEN','IDPruefungBkanr','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungBkanr','Pruefung der Krankenanstaltennummer des Bundesministeriums','1.0',to_date('10.10.2016 14:31:43','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 14:32:31','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108002','DAKA_FORMAL_LOADDATEN','IDPruefungDsid','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungDsid','Prüfung der Datensatz-ID','1.0',to_date('10.10.2016 15:52:09','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 15:52:09','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108004','DAKA_FORMAL_LOADDATEN','IDPruefungDsidf','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungDsidf','Prüfung der Datensatz-ID Formalabweisung','1.0',to_date('10.10.2016 15:53:51','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 15:53:51','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108135','DAKA_FORMAL_LOADDATEN','E4PruefungFkra','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungFkra','Pruefung des Abteilung Funktionscode','1.0',to_date('12.10.2016 16:32:55','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 16:32:55','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108137','DAKA_FORMAL_LOADDATEN','E4PruefungFkrasu','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungFkrasu','Prüfung des Abteilung Subcode','1.0',to_date('12.10.2016 16:34:22','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 16:34:22','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108145','DAKA_FORMAL_LOADDATEN','E4PruefungAgebna','at.sozvers.bva.daka.batch.service.rules.loaddaten.e4.E4PruefungAgebna','Prüfung des Geburtsnamen des Angehörigen.','1.0',to_date('12.10.2016 17:11:56','DD.MM.YYYY HH24:MI:SS'),to_date('12.10.2016 17:11:56','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108225','DAKA_FORMAL_LOADDATEN','E6PruefungEntbindungsdaten','at.sozvers.bva.daka.batch.service.rules.loaddaten.e6.E6PruefungEntbindungsdaten','Prüfung der Entbindungsdaten','1.0',to_date('17.10.2016 07:54:52','DD.MM.YYYY HH24:MI:SS'),to_date('17.10.2016 07:54:52','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('95285','REVISIONSPFLICHT','Revision bei Overrulen: Ergebnis einer Prüfung vom Sachbearbeiter übergangen','at.sozvers.bva.boa.leib.service.rules.revisionspflicht.RevisionOverrulenVomSystem','Prüfung vom Sachbearbeiter übergangen','1.0',to_date('03.01.2018 16:47:15','DD.MM.YYYY HH24:MI:SS'),to_date('03.01.2018 16:47:18','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108465','DAKA_FORMAL_LOADDATEN','E8PruefungGesl','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungGesl','Prüfung des Kennzeichens für das Geschlecht','1.0',to_date('25.10.2016 10:47:46','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 10:47:46','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108485','DAKA_FORMAL_LOADDATEN','E8PruefungAufz','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungAufz','Prüft, ob die Aufnahmezahlen des ID- und des Satzart-Teils übereinstimmen.','1.0',to_date('25.10.2016 15:25:59','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 15:25:59','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108487','DAKA_FORMAL_LOADDATEN','E8PruefungEntdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungEntdat','Prüft das Entlassungsdatum','1.0',to_date('25.10.2016 16:16:12','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 16:16:12','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108491','DAKA_FORMAL_LOADDATEN','E8PruefungGebdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungGebdat','Prüft das Geburtsdatum','1.0',to_date('25.10.2016 16:19:55','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 16:21:29','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108495','DAKA_FORMAL_LOADDATEN','E8PruefungStaat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungStaat','Prüft die Properties e8Staatb und e8Staatw auf Gültigkeit','1.0',to_date('25.10.2016 16:46:40','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 16:47:29','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108499','DAKA_FORMAL_LOADDATEN','E8PruefungKost','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungKost','Prüft den leistungszuständigen Kostenträger','1.0',to_date('25.10.2016 16:53:12','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 16:53:12','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('105049','DAKA_FORMAL_LOADDATEN','E2PruefungDuplikat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungDuplikatRegel','Prueft, ob ein E2 Satz mit derselben Datenträgernummer von derselben meldenden Stelle schon existiert. ','1.0',to_date('23.03.2016 11:50:25','DD.MM.YYYY HH24:MI:SS'),to_date('23.03.2016 11:50:25','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108552','DAKA_FORMAL_LOADDATEN','E11PruefungZusatzdiagnose','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungZusatzdiagnose','Prüfung der Zusatzdiagnose(n)','1.0',to_date('27.10.2016 16:21:54','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 16:21:54','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108557','DAKA_FORMAL_LOADDATEN','E11PruefungZdiagart','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungZdiagart','Prüfung der Zusatzdiagnose-Art','1.0',to_date('27.10.2016 16:46:03','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 16:46:03','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108561','DAKA_FORMAL_LOADDATEN','E11PruefungZdiaglok','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungZdiaglok','Prüfung der Zusatzdiagnose-Lokalisation','1.0',to_date('27.10.2016 16:49:03','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 16:49:03','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('105029','DAKA_FORMAL_LOADDATEN','IDPruefungDatenVersion','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungDatenVersion','Es wird geprüft ob die Datenversion einen zulässigen Wert enthält','1.0',to_date('22.03.2016 16:04:46','DD.MM.YYYY HH24:MI:SS'),to_date('22.03.2016 16:04:46','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('105051','DAKA_FORMAL_LOADDATEN','IDPruefungNichtEKVK','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungNichtEKVK','Prüft, ob das Betreuungsschein-Kennzeichen keine EKVK-Meldung bedeutet','1.0',to_date('23.03.2016 14:25:28','DD.MM.YYYY HH24:MI:SS'),to_date('23.03.2016 14:25:28','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('105072','DAKA_FORMAL_LOADDATEN','E2PruefungProj','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungProj','Prüft den Projektcode','1.0',to_date('23.03.2016 16:56:50','DD.MM.YYYY HH24:MI:SS'),to_date('11.10.2016 08:29:33','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','2');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('105011','DAKA_FORMAL_LOADDATEN','IDPruefungAzuna','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungAzuna','Pruefung des Zunames des Angehoerigen','1.0',to_date('22.03.2016 10:26:20','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 13:53:33','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('105013','DAKA_FORMAL_LOADDATEN','IDPruefungAvona','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungAvona','Pruefung des Vornamens des Angehoerigen','1.0',to_date('22.03.2016 10:29:11','DD.MM.YYYY HH24:MI:SS'),to_date('10.10.2016 13:55:48','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108709','DAKA_FORMAL_LOADDATEN','E11PruefungAnzlei','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungAnzlei','Prüft die Anzahl ambulanter Leistungen','1.0',to_date('28.10.2016 11:10:26','DD.MM.YYYY HH24:MI:SS'),to_date('28.10.2016 11:10:26','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108739','DAKA_FORMAL_LOADDATEN','E11PruefungFolge','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungFolge','Prüft das Kennzeichen Folgedatensatz','1.0',to_date('28.10.2016 11:30:19','DD.MM.YYYY HH24:MI:SS'),to_date('28.10.2016 11:30:19','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108743','DAKA_FORMAL_LOADDATEN','E11PruefungKost','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungKost','Prüft den Kostenträger (leistungszuständig)','1.0',to_date('28.10.2016 11:49:44','DD.MM.YYYY HH24:MI:SS'),to_date('28.10.2016 11:49:44','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108747','DAKA_FORMAL_LOADDATEN','E11PruefungPtot','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungPtot','Prüft die Punkte total','1.0',to_date('28.10.2016 11:58:42','DD.MM.YYYY HH24:MI:SS'),to_date('28.10.2016 11:58:42','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108751','DAKA_FORMAL_LOADDATEN','E11PruefungPwer','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungPwer','Prüft den Punktewert','1.0',to_date('28.10.2016 12:05:47','DD.MM.YYYY HH24:MI:SS'),to_date('28.10.2016 12:05:47','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108753','DAKA_FORMAL_LOADDATEN','E11PruefungLdfbet','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungLdfbet','Prüft den LDF-Ambulanzbetrag','1.0',to_date('28.10.2016 12:07:59','DD.MM.YYYY HH24:MI:SS'),to_date('28.10.2016 12:07:59','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108759','DAKA_FORMAL_LOADDATEN','E11PruefungZeit','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungZeit','Prüft die Behandlungsuhrzeit','1.0',to_date('28.10.2016 12:23:32','DD.MM.YYYY HH24:MI:SS'),to_date('28.10.2016 12:23:32','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108366','DAKA_FORMAL_LOADDATEN','E8PruefungPtot','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungPtot','Prüft den Wert der Punkte Total auf > 0','1.0',to_date('24.10.2016 14:53:23','DD.MM.YYYY HH24:MI:SS'),to_date('24.10.2016 14:54:19','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108405','DAKA_FORMAL_LOADDATEN','E8PruefungFordav','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungFordav','Prüft den Forderungsbetrag','1.0',to_date('25.10.2016 07:59:37','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 07:59:37','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108407','DAKA_FORMAL_LOADDATEN','E8PruefungFordrg','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungFordrg','Prüft den Forderungsbetrag für den Regress','1.0',to_date('25.10.2016 08:06:21','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 08:06:21','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108413','DAKA_FORMAL_LOADDATEN','E8PruefungLdfpp','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungLdfpp','Prüft die Punkte LDF-Pauschale','1.0',to_date('25.10.2016 08:12:01','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 08:12:01','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108417','DAKA_FORMAL_LOADDATEN','E8PruefungPspez','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungPspez','Prüfung Punkte spezieller Bereich','1.0',to_date('25.10.2016 08:15:24','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 08:15:24','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108421','DAKA_FORMAL_LOADDATEN','E8PruefungRenr','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungRenr','Prüfung der Rechnungsnummer','1.0',to_date('25.10.2016 08:19:27','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 08:19:27','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108527','DAKA_FORMAL_LOADDATEN','E11PruefungFkra','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungFkra','Prüft den Abteilung-Funktionscode','1.0',to_date('27.10.2016 10:19:53','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 10:19:53','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108425','DAKA_FORMAL_LOADDATEN','E8PruefungVdo','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungVdo','Prüfung Zusatzpunkte Verweildauerausreißer oben','1.0',to_date('25.10.2016 08:27:37','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 08:27:37','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108427','DAKA_FORMAL_LOADDATEN','E8PruefungVdu','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungVdu','Prüfung der Zusatzpunkte Verweildauerausreißer unten','1.0',to_date('25.10.2016 08:29:19','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 08:29:19','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108433','DAKA_FORMAL_LOADDATEN','E8PruefungZuint','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungZuint','Prüfung der Zusatzpunkte Intensiv','1.0',to_date('25.10.2016 08:44:36','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 08:44:36','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108435','DAKA_FORMAL_LOADDATEN','E8PruefungZumehr','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungZumehr','Prüfung der Zusatzpunkte Mehrleistungen','1.0',to_date('25.10.2016 08:47:16','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 08:47:16','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108441','DAKA_FORMAL_LOADDATEN','E8PruefungVersatz','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungVersatz','Prüfung Patientenanteil täglicher Satz','1.0',to_date('25.10.2016 09:02:46','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 09:02:46','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108443','DAKA_FORMAL_LOADDATEN','E8PruefungVerpa','at.sozvers.bva.daka.batch.service.rules.loaddaten.e8.E8PruefungVerpa','Prüfung des Patientenanteil','1.0',to_date('25.10.2016 09:04:36','DD.MM.YYYY HH24:MI:SS'),to_date('25.10.2016 09:04:36','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108525','DAKA_FORMAL_LOADDATEN','E11PruefungUrs','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungUrs','Prüft die Behandlungsursache','1.0',to_date('27.10.2016 09:59:10','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 09:59:10','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('108529','DAKA_FORMAL_LOADDATEN','E11PruefungFkrasu','at.sozvers.bva.daka.batch.service.rules.loaddaten.e11.E11PruefungFkrasu','Pruft den Abteilung-Subcode','1.0',to_date('27.10.2016 10:21:44','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2016 10:21:44','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000001132','DAKA_FORMAL_LOADDATEN','E3PruefungSanz','at.sozvers.bva.daka.batch.service.rules.loaddaten.e3.E3PruefungSanz','Prüft die Satzanzahl','1.0',to_date('03.04.2017 14:12:04','DD.MM.YYYY HH24:MI:SS'),to_date('03.04.2017 14:12:04','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000001172','DAKA_FORMAL_LOADDATEN','E2PruefungDtnr','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungDtnr','Prüfung der Datenträgernummer','1.0',to_date('05.04.2017 09:18:33','DD.MM.YYYY HH24:MI:SS'),to_date('05.04.2017 09:18:33','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000001066','DAKA_FORMAL_LOADDATEN','E2PruefungEdat','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungEdat','Prüfung des Erstellungsdatums','1.0',to_date('30.03.2017 11:00:04','DD.MM.YYYY HH24:MI:SS'),to_date('30.03.2017 11:00:04','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000001068','DAKA_FORMAL_LOADDATEN','E2PruefungEzei','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungEzei','Prüfung der Erstellungszeit','1.0',to_date('30.03.2017 11:01:49','DD.MM.YYYY HH24:MI:SS'),to_date('30.03.2017 11:03:56','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','1');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000001070','DAKA_FORMAL_LOADDATEN','E2PruefungGber','at.sozvers.bva.daka.batch.service.rules.loaddaten.e2.E2PruefungGber','Prüfung des Gültigkeitsbereichs','1.0',to_date('30.03.2017 11:02:40','DD.MM.YYYY HH24:MI:SS'),to_date('30.03.2017 11:02:40','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000001173','DAKA_FORMAL_LOADDATEN','E6PruefungKabefr','at.sozvers.bva.daka.batch.service.rules.loaddaten.e6.E6PruefungKabefr','Prüfung der Kostenbefreiung der Krankenanstalt','1.0',to_date('10.08.2017 11:12:08','DD.MM.YYYY HH24:MI:SS'),to_date('10.08.2017 11:12:08','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
Insert into RE_REGEL_DEF (ID,KATEGORIE,NAME,REGEL_CLASS_NAME,BESCHREIBUNG,VERSION_BEZEICHNUNG,ERSTELLT_AM,GEAENDERT_AM,ERSTELLT_VON,GEAENDERT_VON,VERSION) values ('5000001001','DAKA_FORMAL_LOADDATEN','IDPruefungDsid2','at.sozvers.bva.daka.batch.service.rules.loaddaten.id.IDPruefungDsid2','Prüfung der Datensatz-ID Version 2. Prüft, ob die ID_DSID vorhanden ist und ob die letzten 7 Stellen ein Numerischer Wert sind.','1.0',to_date('27.10.2017 11:12:08','DD.MM.YYYY HH24:MI:SS'),to_date('27.10.2017 11:12:08','DD.MM.YYYY HH24:MI:SS'),'boa10','boa10','0');
--------------------------------------------------------
--  DDL for Index RE_REGELDEF_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "RE_REGELDEF_PK" ON "RE_REGEL_DEF" ("ID")
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  ;
--------------------------------------------------------
--  Constraints for Table RE_REGEL_DEF
--------------------------------------------------------

  ALTER TABLE "RE_REGEL_DEF" ADD CONSTRAINT "RE_REGELDEF_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  ;
  ALTER TABLE "RE_REGEL_DEF" MODIFY ("VERSION" NOT NULL ENABLE);
  ALTER TABLE "RE_REGEL_DEF" MODIFY ("REGEL_CLASS_NAME" NOT NULL ENABLE);
  ALTER TABLE "RE_REGEL_DEF" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "RE_REGEL_DEF" MODIFY ("ID" NOT NULL ENABLE);
